{"version":3,"sources":["assets/descarga.png","Components/navbar.js","Components/appContext.js","Components/importe.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","src","logoBQ","alt","react_router_dom","activeClassName","exact","to","Component","Menu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","items","itemsAdded","JSON","parse","localStorage","getItem","total","parseFloat","isLoaded","handleClick","bind","assertThisInitialized","handleClickAdded","handleClickSend","handleClickCancel","handleClickDelete","_this2","fetch","then","response","json","findresponse","console","log","setState","e","id","target","name","attributes","getNamedItem","value","price","image","type","importe","substring","sum","menuAdded","totalAddedNew","concat","toConsumableArray","document","getElementById","innerHTML","setItem","stringify","clear","window","location","reload","item","data","filter","i","_this$state","href","includes","Fragment","appContext_ProductList","key","Math","random","category","appContext_TotalDesc","appContext_ProductAdded","appContext_TotalAdded","appContext_ButtonsOrder","appContext_LoaderProducts","ProductList","_this3","map","data-image","data-name","data-type","data-price","onClick","TotalDesc","ProductAdded","_this4","TotalAdded","ButtonsOrder","LoaderProducts","Importe","App","navbar","react_router","path","component","Boolean","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,kOCiEzBC,mLApBT,OACEC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UACjBH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,WAAWC,IAAMC,IAAQC,IAAI,cAC3CN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAWH,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAASJ,UAAU,gBAAgBK,gBAAgB,WAAWC,OAAK,EAACC,GAAG,cAAvE,aACzBV,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAWH,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAASJ,UAAU,gBAAgBK,gBAAgB,WAAWE,GAAG,eAAjE,iBACzBV,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAWH,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAASJ,UAAU,gBAAgBK,gBAAgB,WAAWE,GAAG,WAAjE,YACzBV,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAWH,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAASJ,UAAU,gBAAgBK,gBAAgB,WAAWE,GAAG,UAAjE,4BAZrBC,6BCvCfC,cACF,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,MAAO,GACPC,WAA6D,MAAjDC,KAAKC,MAAMC,aAAaC,QAAQ,cAAwBH,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,GACpHC,MAA4C,MAArCF,aAAaC,QAAQ,aAAuBE,WAAWH,aAAaC,QAAQ,cAAgB,EACnGG,UAAU,GAEdhB,EAAKiB,YAAcjB,EAAKiB,YAAYC,KAAjBjB,OAAAkB,EAAA,EAAAlB,CAAAD,IACnBA,EAAKoB,iBAAmBpB,EAAKoB,iBAAiBF,KAAtBjB,OAAAkB,EAAA,EAAAlB,CAAAD,IACxBA,EAAKqB,gBAAkBrB,EAAKqB,gBAAgBH,KAArBjB,OAAAkB,EAAA,EAAAlB,CAAAD,IACvBA,EAAKsB,kBAAoBtB,EAAKsB,kBAAkBJ,KAAvBjB,OAAAkB,EAAA,EAAAlB,CAAAD,IACzBA,EAAKuB,kBAAmBvB,EAAKuB,kBAAkBL,KAAvBjB,OAAAkB,EAAA,EAAAlB,CAAAD,IAZVA,mFAgBC,IAAAwB,EAAArB,KACfsB,MAAM,uBACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAACG,GACHC,QAAQC,IAAIF,GACZL,EAAKQ,SAAS,CACVhB,UAAU,EACVR,MAAOqB,0CAKPI,GACR,IAAIC,EAAKD,EAAEE,OAAOD,GACbE,EAAOH,EAAEE,OAAOE,WAAWC,aAAa,aAAaC,MACrDC,EAAQP,EAAEE,OAAOE,WAAWC,aAAa,cAAcC,MAEvDE,EAAQR,EAAEE,OAAOE,WAAWC,aAAa,cAAcC,MACvDG,EAAOT,EAAEE,OAAOE,WAAWC,aAAa,aAAaC,MAErDI,EAAU5B,WAAWyB,EAAMI,UAAU,IACrCC,EAAM9B,WAAWZ,KAAKI,MAAMO,MAAQ6B,GAErCG,EAAY3C,KAAKI,MAAME,WACvBsC,EAAgBhC,WAAWZ,KAAKI,MAAMO,OAEzCX,KAAK6B,SAAS,CACXvB,WAAU,GAAAuC,OAAA/C,OAAAgD,EAAA,EAAAhD,CAAM6C,GAAN,CAAiB,CACvBZ,GAAGA,EACHM,MAAOG,EACPF,MAAMA,EACNL,KAAMA,EACNM,KAAKA,KAET5B,MAAO+B,IAEXK,SAASC,eAAe,iBAAiBC,UAAY,KAAML,EAAgBJ,GAC3E/B,aAAayC,QAAQ,YAAa3C,KAAK4C,UAAL,GAAAN,OAAA/C,OAAAgD,EAAA,EAAAhD,CAAmB6C,GAAnB,CAA8B,CAC5DZ,GAAIA,EACJM,MAAOG,EACPF,MAAOA,EACPL,KAAMA,EACNM,KAAMA,OAEV9B,aAAayC,QAAQ,YAAYR,6CAIjCf,QAAQC,IAAI5B,KAAKI,MAAME,YACvBqB,QAAQC,IAAI5B,KAAKI,MAAMO,mDAIvBF,aAAa2C,QACbC,OAAOC,SAASC,+FAOFC,GACd,IAAMC,EAAOzD,KAAKI,MAAME,WAAWoD,OAAO,SAAAC,GAAC,OAAIA,EAAE5B,KAAOyB,EAAKzB,KAC7DJ,QAAQC,IAAI6B,oCAMhB,IAAAG,EAC8C5D,KAAKI,MAAzCS,EADV+C,EACU/C,SAAUR,EADpBuD,EACoBvD,MAAMM,EAD1BiD,EAC0BjD,MAAML,EADhCsD,EACgCtD,WAC5B,OAAIO,EAKIwC,OAAOC,SAASO,KAAKC,SAAS,aAE9B/E,EAAAC,EAAAC,cAACF,EAAAC,EAAM+E,SAAP,KACAhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAC+E,EAAD,CAAaC,IAAK,EAAI,GAAAC,KAAKC,SAAsB9D,MAAOA,EAAO+D,SAAU,YAAatD,YAAad,KAAKc,eAGxG/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAACoF,EAAD,MAEAtF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACqF,EAAD,CAAchE,WAAYA,EAAYW,iBAAkBjB,KAAKiB,oBAE7DlC,EAAAC,EAAAC,cAACsF,EAAD,CAAY5D,MAAOA,KAI3B5B,EAAAC,EAAAC,cAACuF,EAAD,CAAcrD,kBAAmBnB,KAAKmB,kBAAmBD,gBAAiBlB,KAAKkB,oBAIlFmC,OAAOC,SAASO,KAAKC,SAAS,aAE/B/E,EAAAC,EAAAC,cAACF,EAAAC,EAAM+E,SAAP,KACAhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAC+E,EAAD,CAAaC,IAAK,EAAI,GAAAC,KAAKC,SAAsB9D,MAAOA,EAAO+D,SAAU,aAActD,YAAad,KAAKc,eAGzG/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAACoF,EAAD,MAEAtF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACqF,EAAD,CAAchE,WAAYA,EAAYW,iBAAkBjB,KAAKiB,oBAE7DlC,EAAAC,EAAAC,cAACsF,EAAD,CAAY5D,MAAOA,KAI3B5B,EAAAC,EAAAC,cAACuF,EAAD,CAAcrD,kBAAmBnB,KAAKmB,kBAAmBD,gBAAiBlB,KAAKkB,oBAIlFmC,OAAOC,SAASO,KAAKC,SAAS,UAE/B/E,EAAAC,EAAAC,cAACF,EAAAC,EAAM+E,SAAP,KACAhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAC+E,EAAD,CAAaC,IAAK,EAAI,GAAAC,KAAKC,SAAsB9D,MAAOA,EAAO+D,SAAU,SAAUtD,YAAad,KAAKc,eAGrG/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAACoF,EAAD,MAEAtF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACqF,EAAD,CAAchE,WAAYA,EAAYW,iBAAkBjB,KAAKiB,oBAE7DlC,EAAAC,EAAAC,cAACsF,EAAD,CAAY5D,MAAOA,KAI3B5B,EAAAC,EAAAC,cAACuF,EAAD,CAAcrD,kBAAmBnB,KAAKmB,kBAAmBD,gBAAiBlB,KAAKkB,yBAlBrF,EA/CEnC,EAAAC,EAAAC,cAACwF,EAAD,aA1FG/E,aAmKbgF,mLACM,IAAAC,EAAA3E,KACJ,OACAA,KAAKJ,MAAMS,MAAMqD,OAAO,SAAAF,GAAI,OAAIA,EAAKjB,OAASoC,EAAK/E,MAAMwE,WAAUQ,IAAI,SAACpB,EAAKG,GAAN,OACnE5E,EAAAC,EAAAC,cAACF,EAAAC,EAAM+E,SAAP,KACIhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,UACIgF,IAAKN,EACL5B,GAAKyB,EAAKzB,GACV8C,aAAYrB,EAAKlB,MACjBwC,YAAWtB,EAAKvB,KAChB8C,YAAWvB,EAAKjB,KAChByC,aAAYxB,EAAKnB,MACjB4C,QAASN,EAAK/E,MAAMkB,aAPxB,SAUA/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAOC,IAAKqE,EAAKlB,UAGxCvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBsE,EAAKvB,MAClClD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAcsE,EAAKnB,mBAvB9B3C,aA+BpBwF,mLAEE,OACInG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAiBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,aAC/BH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAiBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,aAC/BH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAd,IAAgCH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,mBANxBQ,aAWjByF,mLACM,IAAAC,EAAApF,KACJ,OACGA,KAAKJ,MAAMU,WAAWsE,IAAI,SAACpB,EAAKG,GAAN,OAC1B5E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY+E,IAAKN,EAAG5B,GAAIyB,EAAKzB,GAAIkD,QAASG,EAAKxF,MAAMqB,iBAAiBmE,EAAM5B,EAAKzB,KAC5FhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,UAAb,KACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBsE,EAAKvB,MAClClD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAcsE,EAAKnB,mBAT5B3C,aAmBpB2F,mLAEE,OACEtG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,KAAG8C,GAAG,gBAAN,IAAuB/B,KAAKJ,MAAMe,eALnBjB,aAWnB4F,mLAEE,OACEvG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAa+F,QAASjF,KAAKJ,MAAMuB,mBAAnD,kBACApC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,WAAW+F,QAASjF,KAAKJ,MAAMsB,iBAAjD,2BALaxB,aAWrB6F,mLAEE,OACExG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,OAAK8C,GAAG,YACRhD,EAAAC,EAAAC,cAAA,mCALmBS,aAUdC,IC1PF6F,EAPC,SAAC5F,GAAD,OACZb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACZH,EAAAC,EAAAC,cAAA,wBC2CQwG,MA5Bb,WACA,OACE1G,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACAP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAACyG,EAAD,MACA3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAOnG,OAAK,EAACoG,KAAM,SAASC,UAAWL,IAEvCzG,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAOnG,OAAK,EAACoG,KAAM,aAAaC,UAAWlG,IAE3CZ,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAOnG,OAAK,EAACoG,KAAM,aAAaC,UAAWlG,IAE3CZ,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAOnG,OAAK,EAACoG,KAAM,eAAeC,UAAWlG,IAE7CZ,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAOnG,OAAK,EAACoG,KAAM,WAAWC,UAAWlG,OCpBzBmG,QACW,cAA7BzC,OAAOC,SAASyC,UAEe,UAA7B1C,OAAOC,SAASyC,UAEhB1C,OAAOC,SAASyC,SAASC,MACvB,2DCZNC,IAASC,OAAOnH,EAAAC,EAAAC,cAACkH,EAAD,MAASpD,SAASC,eAAe,SD2H3C,kBAAmBoD,WACrBA,UAAUC,cAAcC,MAAM/E,KAAK,SAAAgF,GACjCA,EAAaC","file":"static/js/main.627db670.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/descarga.b125a25b.png\";","// import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport logoBQ from \"../assets/descarga.png\";\nimport \"../css/style.css\";\nimport React, { Component } from 'react';\n\n\n\n\n// const Navbar =()=> (\n//     <nav>\n//       <div className= \"menu\">\n//       <ul className= \"nav-menu\">\n//       <img className= \"logo-nav\" src= {logoBQ} alt=\"logo-icon\" />\n//       <li className=\"nav-menu\"> <NavLink className=\"nav-menu__link\" to=\"/\">Desayuno </NavLink></li>\n//       <li className=\"nav-menu\"> <NavLink className=\"nav-menu__link\" to=\"/hamburgers\">Hamburguesas </NavLink></li>\n//       <li className=\"nav-menu\"> <NavLink className=\"nav-menu__link\"  to=\"/drinks\">Bebidas </NavLink></li>\n//       <li className=\"nav-menu\"> <NavLink className=\"nav-menu__link\"  to=\"/extra\">Complementos </NavLink></li>\n//       </ul>\n//       </div>\n\n//       <div className= \"total-nav\">\n      \n//       <ul className= \"total\">\n//       <li className=\"nav-total\"> Catidad </li>\n//       <li className=\"nav-total\"> Producto </li>\n//       <li className=\"nav-total\"> Precio </li>\n//       </ul>\n\n      \n//       </div>\n\n//     // ticket\n\n//     </nav>\n\n// );\n\n// export default Navbar;\n\n\n\nclass Navbar extends Component {\n  \n  render() {\n      return (\n        <header className='header'>\n         <nav>\n             <div className=\"menu\">\n               <ul className=\"nav-menu\">\n               <img className= \"logo-nav\" src= {logoBQ} alt=\"logo-icon\" />\n                 <li className=\"nav-menu\"><NavLink className=\"nav-menu_link\" activeClassName=\"activate\" exact to=\"/breakfast\">Desayuno</NavLink></li>\n                 <li className=\"nav-menu\"><NavLink className=\"nav-menu_link\" activeClassName=\"activate\" to=\"/hamburgers\">Hamburguesas</NavLink></li>\n                 <li className=\"nav-menu\"><NavLink className=\"nav-menu_link\" activeClassName=\"activate\" to=\"/drinks\">Bebidas</NavLink></li>\n                 <li className=\"nav-menu\"><NavLink className=\"nav-menu_link\" activeClassName=\"activate\" to=\"/extra\">Complementos</NavLink></li>                   \n                 \n                 \n               </ul>\n             </div>\n         </nav> \n     </header>\n      )\n  }\n}\n\nexport default Navbar;","import React, {Component} from 'react';\n// import './products.css';\n\nclass Menu extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            items: [],\n            itemsAdded: JSON.parse(localStorage.getItem('itemsPlus')) != null ? JSON.parse(localStorage.getItem('itemsPlus')) : [],\n            total: localStorage.getItem('totalPlus') != null ? parseFloat(localStorage.getItem('totalPlus')) : 0.00,\n            isLoaded: false\n        }\n        this.handleClick = this.handleClick.bind(this);\n        this.handleClickAdded = this.handleClickAdded.bind(this);\n        this.handleClickSend = this.handleClickSend.bind(this);\n        this.handleClickCancel = this.handleClickCancel.bind(this);\n        this.handleClickDelete= this.handleClickDelete.bind(this);\n\n    }\n    \n    componentDidMount(){\n        fetch('../Data/prueba.json')\n        .then(response => response.json())\n        .then((findresponse) =>{\n            console.log(findresponse);\n            this.setState({\n                isLoaded: true,\n                items: findresponse, \n            })\n        });\n    }\n        \n    handleClick(e){ \n        let id = e.target.id;\n         let name = e.target.attributes.getNamedItem('data-name').value; //retorna valor\n         let price = e.target.attributes.getNamedItem('data-price').value;\n         \n         let image = e.target.attributes.getNamedItem('data-image').value;\n         let type = e.target.attributes.getNamedItem('data-type').value;\n         \n         let importe = parseFloat(price.substring(1))\n         let sum = parseFloat(this.state.total + importe);\n\n        let menuAdded = this.state.itemsAdded;\n        let totalAddedNew = parseFloat(this.state.total);\n\n         this.setState({\n            itemsAdded: [...menuAdded, {\n                id:id,\n                price: importe,\n                image:image,\n                name: name,\n                type:type,\n            }],\n            total: sum\n        })\n        document.getElementById('importe-total').innerHTML = '$'+ (totalAddedNew + importe)\n        localStorage.setItem('itemsPlus', JSON.stringify([...menuAdded, {\n            id: id,\n            price: importe,\n            image: image,\n            name: name,\n            type: type}])\n        );\n        localStorage.setItem('totalPlus',sum);\n        //console.log(this.state.itemsAdded)\n      };\n    handleClickSend(){\n        console.log(this.state.itemsAdded)\n        console.log(this.state.total)\n    }\n    handleClickCancel(){\n        //Limpiamos state added items y local storage\n        localStorage.clear();\n        window.location.reload();\n    }\n    handleClickAdded(){\n        // console.log('ok')\n        \n       \n    }\n    handleClickDelete(item){\n        const data = this.state.itemsAdded.filter(i => i.id !== item.id)\n        console.log(data)\n        // this.setState({data})\n        // alert('ok2')\n      }\n\n    render()\n    {\n        var { isLoaded, items,total,itemsAdded} = this.state;\n        if(!isLoaded){\n            return(\n                <LoaderProducts />\n                )\n        } \n        else if(window.location.href.includes('breakfast')){\n            return(\n                <React.Fragment>\n                <div className=\"order-menu\">\n                <ProductList key={1 + Math.random() * (100 - 1)} items={items} category={'breakfast'} handleClick={this.handleClick}/>\n                </div>\n                    {/* bloque total  */}\n                <div className='total'>\n                    <TotalDesc/>\n                    {/* lista de productos agregados */}\n                    <div className=\"menuAdded\">\n                        <div className=\"list-menu\" >\n                            <ProductAdded itemsAdded={itemsAdded} handleClickAdded={this.handleClickAdded}/> \n                        </div>\n                            <TotalAdded total={total}/>\n                    \n                    </div>\n                    {/* botones de accion  */}\n                    <ButtonsOrder handleClickCancel={this.handleClickCancel} handleClickSend={this.handleClickSend}/>\n                </div>\n            </React.Fragment>\n            );\n        }else if(window.location.href.includes('hamburger')){\n            return(\n                <React.Fragment>\n                <div className=\"order-menu\">\n                <ProductList key={1 + Math.random() * (100 - 1)} items={items} category={'hamburguer'} handleClick={this.handleClick}/>\n                </div>\n                    {/* bloque total  */}\n                <div className='total'>\n                    <TotalDesc/>\n                    {/* lista de productos agregados */}\n                    <div className=\"menuAdded\">\n                        <div className=\"list-menu\">\n                            <ProductAdded itemsAdded={itemsAdded} handleClickAdded={this.handleClickAdded}/> \n                        </div>\n                            <TotalAdded total={total}/>\n                        \n                    </div>\n                    {/* botones de accion  */}\n                    <ButtonsOrder handleClickCancel={this.handleClickCancel} handleClickSend={this.handleClickSend}/>\n                </div>\n            </React.Fragment>\n            );\n        }else if(window.location.href.includes('drinks')){\n            return(\n                <React.Fragment>\n                <div className=\"order-menu\">\n                <ProductList key={1 + Math.random() * (100 - 1)} items={items} category={'drinks'} handleClick={this.handleClick}/>\n                </div>\n                    {/* bloque total  */}\n                <div className='total'>\n                    <TotalDesc/>\n                    {/* lista de productos agregados */}\n                    <div className=\"menuAdded\">\n                        <div className=\"list-menu\">\n                            <ProductAdded itemsAdded={itemsAdded} handleClickAdded={this.handleClickAdded}/> \n                        </div>\n                            <TotalAdded total={total}/>\n                        \n                    </div>\n                    {/* botones de accion  */}\n                    <ButtonsOrder handleClickCancel={this.handleClickCancel} handleClickSend={this.handleClickSend}/>\n                </div>\n            </React.Fragment>\n            );\n        }  \n    }\n}\n\nclass ProductList extends Component{\n    render(){\n        return(\n        this.props.items.filter(item => item.type === this.props.category).map((item,i) => \n            <React.Fragment>\n                <div className=\"card-main .products\">\n                    <button \n                        key={i} \n                        id={ item.id} \n                        data-image={item.image}\n                        data-name={item.name}\n                        data-type={item.type}\n                        data-price={item.price}\n                        onClick={this.props.handleClick}\n                        >click\n                    </button>\n                    <div className=\"card-image\">\n                        <div className=\"border-img\">\n                            <img className=\"img\"  src={item.image}/>\n                        </div>\n                    </div>\n                    <div className=\"card-content\">\n                        <p className=\"item_product\">{item.name}</p>\n                        <p className=\"item_price\">{item.price}</p>\n                    </div>\n                </div> \n            </React.Fragment>\n        )\n        )\n    }\n}\nclass TotalDesc extends Component{\n    render (){\n        return(\n            <ul className=\"total-description\">\n                <li className=\"nav-menu_total\"><span className=\"total-title\">Cantidad</span></li>\n                <li className=\"nav-menu_total\"><span className=\"total-title\">Producto</span></li>\n                <li className=\"nav-menu_total\"> <span className=\"total-title\">Precio</span></li>\n            </ul>\n        )\n    }\n }\n class ProductAdded extends Component{\n     render(){\n         return(\n            this.props.itemsAdded.map((item,i) => \n            <div>\n                <div className=\"card-main\" key={i} id={item.id} onClick={this.props.handleClickAdded(this, item.id)}>\n                    <div className=\"card-content\">\n                        <p className=\"number\">1</p>\n                        <p className=\"item_product\">{item.name}</p>\n                        <p className=\"item_price\">{item.price}</p>\n                        {/* <button className=\"cancel-product\" id={item.id} onClick={this.props.handleClickDelete}><img src={cancel} alt=\"delete\" className=\"img-cancel\" /></button> */}\n                    </div>\n                </div>\n            </div>     \n            )  \n         )\n     }\n }\n \n  class TotalAdded extends Component{\n      render(){\n          return(\n            <div className=\"total-products\">\n            <span>Total</span>\n            <p id=\"price__total\">${this.props.total}</p>\n            </div>\n          )\n      }\n \n  }\n  class ButtonsOrder extends Component{\n      render(){\n          return(\n            <div className=\"buttons-order\">\n                <button className=\"btn-cancel\" onClick={this.props.handleClickCancel}>Cancelar orden</button>\n                <button className=\"btn-send\" onClick={this.props.handleClickSend}>Confirmar orden</button>\n            </div> \n          )\n      }\n  }\n\n  class LoaderProducts extends Component{\n      render (){\n          return(\n            <div className=\"wpLoader\">\n            <div id=\"loading\"></div>\n            <span>Cargando...</span>\n            </div>\n          )\n      }\n  }\n  export default Menu;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\n\nconst Importe = (props) =>(\n    <div className='importe-orden'>\n       <pagar>Pagar</pagar>\n    </div>\n\n);\n\nexport default Importe;","// import React, {Component} from 'react';\nimport React from 'react';\nimport {BrowserRouter,Route} from \"react-router-dom\";\nimport \"./css/style.css\";\nimport Navbar from \"./Components/navbar\";\n// import Breakfast from \"./Components/breakfast\";\n// import Hamburgers from \"./Components/hamburgers\";\n// import Drinks from \"./Components/drinks\";\n// import Extra from \"./Components/extra\";\nimport Menu from \"./Components/appContext\";\nimport Importe from \"./Components/importe\";\n\n\n\n// class App extends Component{\n\n  \n//   render () {\n\n  function App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n    <Navbar/> \n    <Route exact path= \"/pagar\" component={Importe}/>\n    {/* <Route exact path= \"/breakfast\" render={ ( )=> <Breakfast/>}/> */}\n    <Route exact path= \"/breakfast\" component={Menu}/>\n    {/* <Route path= \"/hamburgers\" render={ ( )=> <Hamburgers/>}/> */}\n    <Route exact path= \"/hamburger\" component={Menu}/>\n    {/* <Route path= \"/extra\" render={ ( )=> <Extra/>}/> */}\n    <Route exact path= \"/Complements\" component={Menu}/>\n    {/* <Route path= \"/drinks\" render={ ( )=> <Drinks/>}/> */}\n    <Route exact path= \"/Bebidas\" component={Menu}/>\n    {/* <Route exact path= \"/\" component={Navbar}/> */}\n  \n    </div>\n\n    {/* <Total/>  */}\n\n    {/* <Questions /> */}\n     </BrowserRouter>\n\n   \n  );\n}\n//}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n// import React, {Component} from 'react';\n// import {BrowserRouter,Route} from \"react-router-dom\";\n// import \"./css/style.css\";\n// import Navbar from \"./Components/navbar\";\n// import Breakfast from \"./Components/breakfast\";\n// import Hamburgers from \"./Components/hamburgers\";\n// import Drinks from \"./Components/drinks\";\n// import Extra from \"./Components/extra\";\n\n\n\n\n// class App extends Component{\n\n  \n// render () {\n//   return (\n//     <BrowserRouter>\n//     <div className=\"App\">\n//     <Navbar/>\n   \n//     <Route exact path= \"/breakfast\" render={ ( )=> <Breakfast/>}/>\n   \n//     <Route path= \"/hamburgers\" render={ ( )=> <Hamburgers/>}/>\n    \n//     <Route path= \"/extra\" render={ ( )=> <Extra/>}/>\n   \n//     <Route path= \"/drinks\" render={ ( )=> <Drinks/>}/>\n  \n//     </div>\n\n//     {/* <Total/>  */}\n\n//     {/* <Questions /> */}\n//      </BrowserRouter>\n\n   \n//   );\n// }\n// }\n\n// export default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}